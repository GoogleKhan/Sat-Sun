# Sat-Sun
Offline classes

--------------------------------------------------
-> Class is an user define data type.

Syntax:
=========
<modifier> class <name> <extends> <implements>
	{
		// body => member  either STATIC or INSTANCE
					1. variables
					2. methods
					3. constructor*
					4. initializer blocks
					5. inner/nested class
					
	}

Example:
----------
	class Car
	{
		int h;  // instance variable
		int w; 	// instance variable	
static	int wc; // static variable
		
		void move(){} // instance method		
static	void avg(){} // static method
		
	}

-----------------------------------------------------------------
*)variable is the name of memory location where data is stored.

-> static members are associated with class or class name.
-> instance members are associated with object or object reference.
------------------------------------------------------------------
Object:
----------
1. Object is an real world entity.
2. Object is an instance of a class.

Syntax:
---------
		<type>	<var> = new <type>(<parameterList>)

Example:
==========
		
		int i = 10;
		
		Car c1 = new Car();
		Car c2 = new Car();

		
Accessing Members:
----------------------		
1. <ClassName>.<member>    (only static members)
2. <ObjRef>.<member>  (instance as well as static)
3. <member>		
-------------------------------------------------
	Car.wc = 50; // OK

	 c2.w = 20;
	 c1.h =15;	
	------------------------

      Car.h =25; //error	
	  c1.wc= 100; // OK (not recommended)
		
------------------------------------------------------------------
The main():
=================

	public static void main(String[] shad)
		{
		}










		
		
		
		
		
		